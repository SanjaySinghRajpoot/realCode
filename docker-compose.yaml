version: '3.8'
services:
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000" 
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8000/code
  backend:
    container_name: backend
    build: ./backend
    volumes:
      - ./backend:/app/backend
    environment:
      - REDIS_URL=redis://cache:6379/1
      - REDIS_PASSWORD=12345678
    ports:
      - "8000:8000"
    stdin_open: true
    tty: true
    command: python3 manage.py runserver 0.0.0.0:8000
  cache:
    image: redis:alpine
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${PASSWORD}
    volumes: 
      - cache:/data
  nginx:
    build:
      context: ./nginx
    volumes:
      - static:/static
      - ./frontend:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: 'rabbitmq'
  #   ports:
  #       - 5672:5672
  #       - 15672:15672
  #   volumes:
  #       - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #       - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  # celery:
  #   build: ./backend
  #   command: celery -A realcode worker -l info
  #   volumes:
  #     - ./backend/:/code
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672//

  # celery-beat:
  #   build: ./backend
  #   command: celery -A realcode beat -l info
  #   volumes:
  #     - ./backend/:/code
  #   depends_on:
  #     - rabbitmq
  #   environment:
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672//

volumes:
  static:
  # rabbitmq_data:
  #   driver: local
  frontend:
  cache:
    driver: local
    

